#
# AGP (Arcan Graphics Platform)
# the minimal set of graphics features needed for the engine to run,
# the common denominator between implementations are the functions
# defined in video_platform.h that are prefixed with agp_
#

if (NOT AGP_PLATFORM)
	SET(AGP_PLATFORM "gl21")
endif()

SET (AGP_GL_SHARED
	${CMAKE_CURRENT_SOURCE_DIR}/platform/video_platform.h
	${CMAKE_CURRENT_SOURCE_DIR}/platform/agp/glshared.c
	${CMAKE_CURRENT_SOURCE_DIR}/platform/agp/glfun.h
	${CMAKE_CURRENT_SOURCE_DIR}/platform/agp/shdrmgmt.c
	${CMAKE_CURRENT_SOURCE_DIR}/platform/agp/glinit.c
)

if (AGP_PLATFORM STREQUAL "stub")
	set(AGP_SOURCES
		${CMAKE_CURRENT_SOURCE_DIR}/platform/agp/stub.c
	)

elseif (AGP_PLATFORM STREQUAL "gl21")
	FIND_PACKAGE(OpenGL REQUIRED QUIET)
	SET (AGP_LIBRARIES
		${OPENGL_gl_LIBRARY}
	)
	add_definitions(-DOPENGL)
	SET (AGP_SOURCES
		${AGP_GL_SHARED}
		${CMAKE_CURRENT_SOURCE_DIR}/platform/agp/gl21.c
	)

elseif (AGP_PLATFORM STREQUAL "gles2")
	FIND_PACKAGE(GLES2 REQUIRED QUIET)
	add_definitions(-DGLES2)
	SET(AGP_LIBRARIES
		${GLES2_LIBRARIES}
	)
		SET (AGP_SOURCES
		${AGP_GL_SHARED}
		${CMAKE_CURRENT_SOURCE_DIR}/platform/agp/gles.c
	)

elseif (AGP_PLATFORM STREQUAL "gles3")
	FIND_PACKAGE(GLES3 REQUIRED QUIET)
	add_definitions(-DGLES3)
	SET(AGP_LIBRARIES
		${GLES3_LIBRARIES}
	)
	SET (AGP_SOURCES
		${AGP_GL_SHARED}
		${CMAKE_CURRENT_SOURCE_DIR}/platform/agp/gles.c
	)
	set_property(SOURCE ${CMAKE_CURRENT_SOURCE_DIR}/platform/agp/gles.c
		APPEND PROPERTY COMPILE_DEFINITIONS GLES3)

else()
	message(FATAL_ERROR "Unknown AGP platform specified, #{AGP_PLATFORM}")
endif()
